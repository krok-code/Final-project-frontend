{"version":3,"file":"static/js/71.38afad90.chunk.js","mappings":"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","sources":["components/Boards/HeaderDashboard/HeaderDashboard.jsx","components/EditColumn/EditColumn.jsx","components/Modals/EditColumnModal/EditColumnModal.jsx","components/Boards/ColumnTask/ColumnTask.styled.jsx","components/Boards/ColumnTask/ColumnTask.jsx","components/Boards/MainDashboard/MainDashboard.styled.jsx","components/AddColumn/AddColumn.jsx","components/Modals/AddColumModal/AddColumnModal.jsx","components/Boards/MainDashboard/MainDashboard.jsx","pages/Home/ScreensPage/ScreensPage.styled.jsx","pages/Home/ScreensPage/ScreensPage.jsx"],"sourcesContent":["// import FiltersModal from 'components/Modals/FiltersModal/FiltersModal';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <div>\n      <h2>{children}</h2>\n      {/* <FiltersModal /> */}\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from '../../redux/cards/cardsReducers';\n\nconst EditColumn = ({ text, columnId }) => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n      columnId: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = () => {\n    dispatch(editColumn(text, columnId));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"text\"\n        placeholder=\"Title\"\n        {...register('text')}\n        error={touched.text && errors.text && errors.text.message}\n      />\n      {errors.text && <Error>{errors.text.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default EditColumn;\n","// import { Modal } from '../../mainModal/MainModal';\n// import { modalNames } from '../../../constant/constant';\nimport {\n  Div,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  CloseModalCrossStyled,\n} from '../EditProfileModal/EditProfileModal.styled';\nimport { Close } from 'assets/fonts/images/icons/Close';\nimport EditColumn from '../../EditColumn/EditColumn';\n\nconst EditColumnModal = ({ onClose }) => {\n  return (\n    // <Modal modalId={modalNames.EDIT_COLUMN}>\n    <Div onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>Edit column</ModalTitle>\n          <CloseModalCrossStyled type=\"button\" onClick={onClose}>\n            <Close />\n          </CloseModalCrossStyled>\n        </ModalHeader>\n        <EditColumn />\n      </ModalContainer>\n    </Div>\n    // </Modal>\n  );\n};\nexport default EditColumnModal;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const TaskList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 8px;\n  max-height: calc(154px * 2 + 8px);\n  padding-right: 8px;\n\n  overflow-y: scroll;\n\n  overflow-y: ${props => (props.length < 3 ? 'hidden' : 'scroll')};\n  width: ${props => (props.length < 3 ? '342px' : '350px')};\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-height: 780px) {\n    max-height: calc(154px * 3 + 16px);\n    overflow-y: ${props => (props.length < 4 ? 'hidden' : 'scroll')};\n    width: ${props => (props.length < 4 ? '342px' : '350px')};\n  }\n\n  @media screen and (min-height: 942px) {\n    max-height: calc(154px * 4 + 24px);\n    overflow-y: ${props => (props.length < 5 ? 'hidden' : 'scroll')};\n    width: ${props => (props.length < 5 ? '342px' : '350px')};\n  }\n\n  @media screen and (min-height: 1104px) {\n    max-height: calc(154px * 5 + 32px);\n    overflow-y: ${props => (props.length < 6 ? 'hidden' : 'scroll')};\n    width: ${props => (props.length < 6 ? '342px' : '350px')};\n  }\n`;\n\n// header\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n\n  border-radius: 8px;\n  background-color: ${props => props.theme.column.backgroundMain};\n  font-weight: 500;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.column.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.column.icon};\n  fill: transparent;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n  padding: 14px;\n  margin-bottom: 16px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  border: none;\n  color: ${props => props.theme.column.buttonColor};\n  background-color: ${props => props.theme.column.buttonBackground};\n  border-radius: 8px;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.column.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport sprite from '../../../assets/fonts/images/icons/icons-sprite.svg';\nimport { deleteColumn } from '../../../redux/cards/cardsReducers';\n// import Card from 'components/Cards/Card';\nimport EditColumnModal from '../../Modals/EditColumnModal/EditColumnModal';\n\nimport {\n  Wrapper,\n  Header,\n  IconWrapper,\n  Icon,\n  Content,\n  Title,\n  ContentWrapper,\n} from './ColumnTask.styled';\n\n// import { useSelector } from 'react-redux';\n\nexport const ColumnTask = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  //   const [openCardModal, setOpenCardModal] = useState(false);\n\n  // const selectedPriority = useSelector(\n  //   state => state.dashboards.selectedPriority\n  // );\n\n  const handleOpenColumnModal = () => setOpenColumnModal(true);\n  const handleCloseColumnModal = () => setOpenColumnModal(false);\n\n  //   const handleOpenCardModal = () => setOpenCardModal(true);\n  //   const handleCloseCardModal = () => setOpenCardModal(false);\n\n  // const filteredColumn =\n  //   item.cards && item.cards.filter(item => item.priority === selectedPriority);\n\n  // const columnLength = item.cards && item.cards.length;\n  // const fileteredColumnLength = filteredColumn && filteredColumn.length;\n\n  // const condition =\n  //   selectedPriority === 'show all' ? columnLength : fileteredColumnLength;\n\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <Content>\n          <Header>\n            <Title>{item.title}</Title>\n\n            <IconWrapper>\n              <Icon onClick={handleOpenColumnModal}>\n                <use href={sprite + '#icon-pencil'} />\n              </Icon>\n\n              <Icon onClick={() => dispatch(deleteColumn(item._id))}>\n                <use href={sprite + '#icon-trash'} />\n              </Icon>\n            </IconWrapper>\n          </Header>\n\n          {/* <TaskList length={condition}>\n            {selectedPriority === 'show all'\n              ? item.cards &&\n                item.cards.map(el => (\n                  <Card key={el._id} item={el} columnName={item.title} />\n                ))\n              : filteredColumn &&\n                filteredColumn.map(el => (\n                  <Card key={el._id} item={el} columnName={item.title} />\n                ))}\n          </TaskList> */}\n        </Content>\n        {/* \n        <ButtonPlus onClick={handleOpenCardModal} /> */}\n      </ContentWrapper>\n\n      {openColumnModal && (\n        <EditColumnModal\n          title={item.title}\n          columnId={item._id}\n          closeModal={handleCloseColumnModal}\n        />\n      )}\n\n      {/* <AddCardModal columnId={item._id} closeModal={handleCloseCardModal} /> */}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  user-select: none;\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 34px;\n`;\n","import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\nimport { selectColumns } from '../../redux/selectors';\n\nconst AddColumn = () => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      text: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = (data, bordId) => {\n    const alreadyExistsIndex = columns.findIndex;\n\n    if (alreadyExistsIndex >= 0) {\n      const alreadyExistsColumn = columns[alreadyExistsIndex];\n      return `${alreadyExistsColumn.name} is already added to contact list`;\n    } else {\n      dispatch(addColumn({ bordId, data }));\n      // console.log({ text });\n    }\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"text\"\n        placeholder=\"To do\"\n        {...register('text')}\n        error={touched.text && errors.text && errors.text.message}\n      />\n      {errors.text && <Error>{errors.text.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default AddColumn;\n","// import { Modal } from '../../mainModal/MainModal';\n// import { modalNames } from '../../../constant/constant';\nimport {\n  Div,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  CloseModalCrossStyled,\n} from '../EditProfileModal/EditProfileModal.styled';\nimport { Close } from 'assets/fonts/images/icons/Close';\nimport AddColumn from 'components/AddColumn/AddColumn';\nconst AddColumModal = ({ onClose }) => {\n  return (\n    <Div onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>Add column</ModalTitle>\n          <CloseModalCrossStyled type=\"button\" onClick={onClose}>\n            <Close />\n          </CloseModalCrossStyled>\n        </ModalHeader>\n        <AddColumn />\n      </ModalContainer>\n    </Div>\n  );\n};\nexport default AddColumModal;\n","import React, { useState, useRef } from 'react';\nimport { ColumnTask } from '../ColumnTask/ColumnTask';\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\nimport AddColumnModal from '../../Modals/AddColumModal/AddColumnModal';\nimport { useSelector } from 'react-redux';\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\n\nconst MainDashboard = () => {\n  const columnLength = useSelector(state => state?.dashboards?.columnLength);\n  const currentDashboard = useSelector(\n    state => state?.dashboards?.currentBoardId\n  );\n  const columns = useSelector(state => state?.dashboards?.columnId);\n\n  const [open, setOpen] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const scrollRef = useRef(null);\n  const [startX, setStartX] = useState(0);\n\n  const onOpen = () => {\n    setOpen(true);\n    setIsDragging(false);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n    setIsDragging(true);\n  };\n\n  const handleMouseDown = e => {\n    if (e.button === 0) {\n      const target = e.target.tagName.toLowerCase();\n      if (target !== 'input' && target !== 'textarea') {\n        setIsDragging(true);\n        setStartX(e.pageX - scrollRef.current.offsetLeft);\n      }\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (!isDragging || open) return;\n    const x = e.pageX - scrollRef.current.offsetLeft;\n    const walk = (x - startX) * 0.05;\n    scrollRef.current.scrollLeft = scrollRef.current.scrollLeft - walk;\n  };\n\n  const handleMouseUp = e => {\n    if (e.button === 0) {\n      setIsDragging(false);\n    }\n  };\n\n  return (\n    <Wrapper length={columnLength} ref={scrollRef}>\n      <ContentWrapper\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        {columns &&\n          columns.map(item => <ColumnTask key={item._id} item={item} />)}\n\n        <ButtonPlus approve={true} onOpen={onOpen} text=\"Add column\" />\n      </ContentWrapper>\n\n      {open && setIsDragging && (\n        <AddColumnModal\n          dashboardId={currentDashboard?._id}\n          onClose={handleCloseModal}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  opacity: ${props => (props.isOpen ? '0.6' : '1')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport HeaderDashboard from 'components/Boards/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/Boards/MainDashboard/MainDashboard';\nimport { selectIsMenuOpen } from '../../../redux/menu/selectors';\nimport { closeMenuMode } from '../../../redux/menu/menuSlice';\nimport { Wrapper } from './ScreensPage.styled';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentBg = useSelector(state => state?.dashboards?.currentBg);\n  const currentName = useSelector(state => state?.dashboards?.currentName);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleScreenClick} bgcUrl={currentBg} isOpen={menuMode}>\n      <HeaderDashboard children={currentName} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["_ref","children","_jsx","text","columnId","dispatch","useDispatch","register","handleSubmit","formState","errors","touched","reset","useForm","mode","defaultValues","resolver","yupResolver","editColumnSchema","_jsxs","Form","onSubmit","editColumn","Input","type","id","placeholder","error","message","Error","ButtonPlus","approve","onClose","Div","onClick","ModalContainer","e","stopPropagation","ModalHeader","ModalTitle","CloseModalCrossStyled","Close","EditColumn","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","ContentWrapper","_templateObject3","Header","_templateObject4","props","length","theme","column","scrollTrack","scrollBorder","scrollThumb","_templateObject5","backgroundMain","Title","_templateObject6","textMain","IconWrapper","_templateObject7","Icon","_templateObject8","icon","ColumnTask","_templateObject9","buttonColor","buttonBackground","_templateObject10","plusBackground","_templateObject11","item","openColumnModal","setOpenColumnModal","useState","title","handleOpenColumnModal","href","sprite","deleteColumn","_id","EditColumnModal","closeModal","handleCloseColumnModal","AddColumn","columns","useSelector","selectColumns","data","bordId","alreadyExistsIndex","findIndex","alreadyExistsColumn","concat","name","addColumn","MainDashboard","columnLength","state","_state$dashboards","dashboards","currentDashboard","_state$dashboards2","currentBoardId","_state$dashboards3","open","setOpen","isDragging","setIsDragging","scrollRef","useRef","startX","setStartX","ref","onMouseDown","button","target","tagName","toLowerCase","pageX","current","offsetLeft","onMouseMove","walk","scrollLeft","onMouseUp","map","onOpen","AddColumnModal","dashboardId","handleCloseModal","bgcUrl","isOpen","ScreensPage","menuMode","selectIsMenuOpen","currentBg","currentName","handleScreenClick","closeMenuMode","HeaderDashboard"],"sourceRoot":""}